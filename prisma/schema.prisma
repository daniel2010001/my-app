// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Parcela {
  id             Int           @id @default(autoincrement())
  nombre         String
  variedad_maiz  VariedadMaiz
  latitud        Decimal       @db.Decimal(10, 8)
  longitud       Decimal       @db.Decimal(11, 8)
  cantidad_kg    Int
  distancia_km   Decimal       @db.Decimal(5, 2)
  estado_via     EstadoVia
  ventana_inicio DateTime      @db.Date
  ventana_fin    DateTime      @db.Date
  id_centro      Int
  centroAcopio   CentroAcopio  @relation(fields: [id_centro], references: [id])
  incidencias    Incidencia[]
  recolecciones  Recoleccion[]
}

enum VariedadMaiz {
  Blanco
  Amarillo
  Morado
}

enum EstadoVia {
  Muy_Buena
  Buena
  Regular
  Mala
}

model Vehiculo {
  id             Int            @id @default(autoincrement())
  tipo           String
  capacidad_kg   Int
  volumen_max    Decimal        @db.Decimal(10, 2)
  disponibilidad Disponibilidad
  recolecciones  Recoleccion[]
}

enum Disponibilidad {
  Disponible
  Mantenimiento
  En_Ruta
}

model CentroAcopio {
  id            Int           @id @default(autoincrement())
  nombre        String
  latitud       Decimal       @db.Decimal(10, 8)
  longitud      Decimal       @db.Decimal(11, 8)
  rutas_origen  Ruta[]        @relation("RutasOrigen")
  rutas_destino Ruta[]        @relation("RutasDestino")
  recolecciones Recoleccion[]
  Parcela       Parcela[]
}

model Ruta {
  id              Int          @id @default(autoincrement())
  origen          CentroAcopio @relation("RutasOrigen", fields: [id_origen], references: [id])
  id_origen       Int
  destino         CentroAcopio @relation("RutasDestino", fields: [id_destino], references: [id])
  id_destino      Int
  texto           String
  distancia_km    Decimal      @db.Decimal(5, 2)
  tiempo_estimado Decimal      @db.Decimal(5, 2)
  costo           Decimal      @db.Decimal(10, 2)
}

model Recoleccion {
  id           Int               @id @default(autoincrement())
  parcela      Parcela           @relation(fields: [id_parcela], references: [id])
  id_parcela   Int
  vehiculo     Vehiculo          @relation(fields: [id_vehiculo], references: [id])
  id_vehiculo  Int
  centroAcopio CentroAcopio      @relation(fields: [id_centro], references: [id])
  id_centro    Int
  fecha        DateTime          @default(now()) @db.Date
  estado       EstadoRecoleccion
}

enum EstadoRecoleccion {
  Pendiente
  En_Curso
  Completada
}

model Incidencia {
  id               Int       @id @default(autoincrement())
  parcela          Parcela   @relation(fields: [id_parcela], references: [id])
  id_parcela       Int
  fecha_incidencia DateTime? @default(now()) @db.Date
  tipo_incidencia  String
  descripcion      String
  impacto_kg       Int?
  nueva_fecha      DateTime? @db.Date
  estado_actual    String?
  observaciones    String?
}
